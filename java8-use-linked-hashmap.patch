changeset:   1493:0ecfebcf845d
user:        maslovalex
date:        Thu May 22 09:24:53 2014 +0300
summary:     Using LinkedHashMap in some tests to be sure about keys order in dumped yaml.

diff -r 1413062d7874 -r 0ecfebcf845d src/test/java/org/yaml/snakeyaml/constructor/ImplicitTagsTest.java
--- a/src/test/java/org/yaml/snakeyaml/constructor/ImplicitTagsTest.java	Wed May 21 16:06:58 2014 +0300
+++ b/src/test/java/org/yaml/snakeyaml/constructor/ImplicitTagsTest.java	Thu May 22 09:24:53 2014 +0300
@@ -16,6 +16,7 @@
 package org.yaml.snakeyaml.constructor;
 
 import java.util.HashMap;
+import java.util.LinkedHashMap;
 import java.util.List;
 import java.util.Map;
 
@@ -69,14 +70,16 @@
 
     @SuppressWarnings("unchecked")
     public void testRootMap() {
-        Map<Object, Object> car1 = new HashMap<Object, Object>();
-        car1.put("plate", "12-XP-F4");
+        Map<Object, Object> car1 = new LinkedHashMap<Object, Object>();
         Wheel wheel = new Wheel();
         wheel.setId(2);
-        car1.put("wheel", wheel);
         Map<String, Integer> map = new HashMap<String, Integer>();
         map.put("id", 3);
+
+        car1.put("wheel", wheel);
         car1.put("map", map);
+        car1.put("plate", "12-XP-F4");
+
         String carYaml1 = new Yaml().dump(car1);
         assertEquals(Util.getLocalResource("constructor/carwheel-root-map.yaml"), carYaml1);
         Map<Object, Object> car2 = (Map<Object, Object>) new Yaml().load(carYaml1);
diff -r 1413062d7874 -r 0ecfebcf845d src/test/java/org/yaml/snakeyaml/issues/issue61/GenericMapBeanTest.java
--- a/src/test/java/org/yaml/snakeyaml/issues/issue61/GenericMapBeanTest.java	Wed May 21 16:06:58 2014 +0300
+++ b/src/test/java/org/yaml/snakeyaml/issues/issue61/GenericMapBeanTest.java	Thu May 22 09:24:53 2014 +0300
@@ -16,6 +16,7 @@
 package org.yaml.snakeyaml.issues.issue61;
 
 import java.util.HashMap;
+import java.util.LinkedHashMap;
 import java.util.Map;
 
 import junit.framework.TestCase;
@@ -68,7 +69,7 @@
     }
 
     public static class MapProvider<K, V> {
-        private Map<K, V> map = new HashMap<K, V>();
+        private Map<K, V> map = new LinkedHashMap<K, V>();
 
         public Map<K, V> getMap() {
             return map;

